#include <Arduino.h>
#include <oled.h>

OLED display=OLED(4,5);

// 'efrei', 128x48px
static const uint8_t bitmap [] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x07, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x7f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x7f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 
	0x00, 0x0f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 
	0x00, 0x07, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 
	0x00, 0x01, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 
	0x0c, 0x00, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x07, 0xf8, 0x00, 0x00, 0x02, 0xc0, 
	0x0e, 0x00, 0x7f, 0xff, 0xf1, 0x80, 0xff, 0xfc, 0x1f, 0xff, 0x1f, 0xfe, 0x1f, 0xff, 0x81, 0xc0, 
	0x0f, 0xc1, 0xff, 0xff, 0xf3, 0x81, 0xff, 0xff, 0x1f, 0xff, 0x3f, 0xff, 0x3f, 0xff, 0xc3, 0xc0, 
	0x0f, 0xe7, 0xfe, 0x7f, 0xff, 0x83, 0xff, 0xff, 0x1f, 0xff, 0x7f, 0xff, 0x7f, 0xff, 0xe3, 0xc0, 
	0x0f, 0xff, 0xfe, 0x7f, 0xff, 0x83, 0xff, 0xff, 0x1f, 0xfc, 0x7f, 0xff, 0x7f, 0xff, 0xe3, 0xc0, 
	0x0f, 0xff, 0xfe, 0x7f, 0xff, 0x83, 0xc0, 0x0f, 0x9e, 0x00, 0x7c, 0x00, 0x78, 0x01, 0xf3, 0xc0, 
	0x0f, 0xff, 0xfe, 0x7f, 0xff, 0x83, 0xc0, 0x0f, 0x9e, 0x00, 0x7c, 0x00, 0x78, 0x01, 0xf3, 0xc0, 
	0x0f, 0xff, 0xfe, 0x7f, 0xff, 0x83, 0xff, 0xff, 0x9e, 0x00, 0x7c, 0x00, 0x7f, 0xff, 0xf3, 0xc0, 
	0x0f, 0xff, 0xfe, 0x3f, 0xff, 0x83, 0xff, 0xff, 0x1e, 0x00, 0x7c, 0x00, 0x7f, 0xff, 0xe3, 0xc0, 
	0x0f, 0xff, 0xfe, 0x0f, 0xff, 0x83, 0xff, 0xff, 0x1e, 0x00, 0x7c, 0x00, 0x7f, 0xff, 0xe3, 0xc0, 
	0x0f, 0xff, 0xfe, 0x1f, 0xff, 0x83, 0xff, 0xfe, 0x1e, 0x00, 0x7c, 0x00, 0x7f, 0xff, 0xc3, 0xc0, 
	0x0f, 0xff, 0xfe, 0x1f, 0xff, 0x83, 0xff, 0xf8, 0x1e, 0x00, 0x7c, 0x00, 0x7f, 0xff, 0x03, 0xc0, 
	0x0f, 0xff, 0xfc, 0x1f, 0xff, 0x83, 0xc0, 0x00, 0x1e, 0x00, 0x7c, 0x00, 0x78, 0x00, 0x03, 0xc0, 
	0x0f, 0xff, 0xf8, 0x1f, 0xff, 0x83, 0xff, 0xfe, 0x1e, 0x00, 0x7c, 0x00, 0x7f, 0xff, 0xc3, 0xc0, 
	0x0f, 0xff, 0xe0, 0x0f, 0xff, 0x83, 0xff, 0xff, 0x1e, 0x00, 0x7c, 0x00, 0x7f, 0xff, 0xc3, 0xc0, 
	0x0f, 0xff, 0xc0, 0x0f, 0xff, 0x81, 0xff, 0xff, 0x1e, 0x00, 0x7c, 0x00, 0x3f, 0xff, 0xc3, 0xc0, 
	0x0f, 0xff, 0xc0, 0x0f, 0xff, 0x80, 0xff, 0xfe, 0x1e, 0x00, 0x7c, 0x00, 0x3f, 0xff, 0xc3, 0xc0, 
	0x0f, 0xff, 0xc0, 0x0f, 0xff, 0x80, 0x7f, 0xfc, 0x1e, 0x00, 0x78, 0x00, 0x0f, 0xff, 0x83, 0xc0, 
	0x07, 0xff, 0xc0, 0x1f, 0xff, 0x01, 0xc0, 0x60, 0x78, 0x10, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x01, 0xff, 0xc0, 0x1f, 0xfc, 0x03, 0xf0, 0xe0, 0x7c, 0x38, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0xff, 0xc0, 0x1f, 0xf8, 0x03, 0xf0, 0xf0, 0x7c, 0x38, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x3f, 0xc0, 0x1f, 0xe0, 0x03, 0xf1, 0xf0, 0x7c, 0x38, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x0f, 0xc0, 0x0f, 0x80, 0x03, 0xe1, 0xf0, 0x7c, 0x38, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x07, 0xc0, 0x0e, 0x00, 0x03, 0xc1, 0xf8, 0x7c, 0x38, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0xc0, 0x08, 0x00, 0x03, 0x01, 0x98, 0x6c, 0x38, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x40, 0x00, 0x00, 0x03, 0x01, 0x98, 0x6c, 0x18, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup(){
    delay(1000);
    display.begin();   
}

void loop(){
    // Draw pixels in the outer edges  
    display.draw_pixel(0,0); //x, y
    display.draw_pixel(127,0); //x, y
    display.draw_pixel(127,31); //x, y
    display.draw_pixel(0,31); //x, y   
    display.display();
    delay(500);
   
    // Draw solid circles
    display.draw_circle(36,16,14,OLED::SOLID); //x, y, radius, fillMode
    display.display();
    delay(500);
    display.draw_circle(36,16,7,OLED::SOLID,OLED::BLACK); //x, y, radius, fillMode, color
    display.display();
    delay(500);
    
    // Draw hollow circles
    for (uint_least8_t radius=3; radius<62; radius+=3)
    {
        delay(50);
        display.draw_circle(64,16,radius);
        if (radius>15){
            display.draw_circle(64,16,radius-15,OLED::SOLID,OLED::BLACK); //x, y, radius, fillMode, color
        }
        display.display();
    }
    delay(500);
 
    // Draw rectangles
    display.draw_rectangle(64,0,98,31); //x1, y1, x2, y2
    display.display();
    delay(500);
    display.draw_rectangle(69,5,93,26,OLED::SOLID); //x1, y1, x2, y2, fillMode
    display.display();
	delay(1000);
   
    // scroll up
    display.scroll_up(32,20); // num_lines, delay_ms
	delay(2000);
    
    // Draw text with normal size
    display.draw_string(4,2,"Hello"); // x, y, string
    display.display();
	delay(500);
    
    // Draw text from program memory with double size
    display.draw_string_P(16,15,PSTR("World!"),OLED::DOUBLE_SIZE); //x, y, string, size
    display.display();
	delay(500);
    
    // Draw a line
    display.draw_line(4,10,34,10); //x1, y1, x2, y2
    display.display();    
	delay(500);
    
    // Draw a cross
    display.draw_line(16,31,88,15); //x1, y1, x2, y2
    display.draw_line(16,15,88,31); //x1, y1, x2, y2
    display.display();
	delay(500);
    
    // Draw a raw bitmap
    display.draw_bitmap_P(0,8,128,48,bitmap); //x, y, width, height, bitmap
    display.display();
    delay(1000);    
	
    // Demonstrate scrolling
    display.set_scrolling(OLED::HORIZONTAL_RIGHT);
    delay(3000);
    display.set_scrolling(OLED::HORIZONTAL_LEFT);
    delay(3000);
    display.set_scrolling(OLED::NO_SCROLLING);
    
    // Redraw after scrolling to get the original picture
    display.display();
    delay(1000);
	
    // Flash the display
    for (int i=0; i<10; i++){
        display.set_invert(true);
        delay(200);
        display.set_invert(false);
        delay(200);
    }
    
    // Set contrast values
    contrast(128);
    contrast(64);
    contrast(32);
    contrast(16);
    contrast(8);
    contrast(4);
    contrast(2);
    contrast(1);
    contrast(2);
    contrast(4);
    contrast(8);
    contrast(16);
    contrast(32);
    contrast(64);
    contrast(128);
    contrast(255);
    contrast(128);
    delay(3000);
          
    display.clear();
}

void contrast(int value){
    char buffer[4];
    display.clear();  
    display.draw_string(0,0,"Contrast:");
    itoa(value,buffer,10);
    display.draw_string(64,0,buffer);
    display.draw_rectangle(0,20,value/2,31,OLED::SOLID);
    display.display();
    display.set_contrast(value);
    delay(500);
}
